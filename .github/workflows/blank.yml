name: Pterodactyl Auto Setup & Backup

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *" # every 12 hours

jobs:
  setup-and-backup:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget unzip tar gnupg lsb-release git mariadb-server \
              redis-server nginx software-properties-common apt-transport-https ca-certificates \
              php php-cli php-mysql php-mbstring php-bcmath php-xml php-fpm php-curl

      - name: Restore backup if exists
        run: |
          if [ -f latest-backup-url.txt ]; then
            BACKUP_URL=$(cat latest-backup-url.txt)
            echo "Found backup URL: $BACKUP_URL"
            curl -L $BACKUP_URL -o latest-backup.tar.gz
            sudo tar -xzf latest-backup.tar.gz -C /
            echo "✅ Backup restored"
            exit 0
          else
            echo "No backup URL found, fresh install."
          fi

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_KEY }} --hostname=ptero-panel --advertise-routes=10.0.0.0/24 --accept-routes
          sudo tailscale ip -4 > panel-ip.txt
          echo "Panel IP: $(cat panel-ip.txt)"

      - name: Install PHP 8.2
        run: |
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt-get update
          sudo apt-get install -y php8.2 php8.2-cli php8.2-common php8.2-mysql \
            php8.2-pgsql php8.2-sqlite3 php8.2-redis php8.2-mbstring php8.2-xml \
            php8.2-bcmath php8.2-gd php8.2-curl unzip curl git \
            php8.2-zip composer
          
          sudo update-alternatives --set php /usr/bin/php8.2
          php -v

      - name: Setup MySQL for Pterodactyl
        run: |
          sudo systemctl start mysql
          sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS panel;"
          sudo mysql -u root -e "CREATE USER IF NOT EXISTS 'pterodactyl'@'localhost' IDENTIFIED BY 'StrongPassword123!';"
          sudo mysql -u root -e "GRANT ALL PRIVILEGES ON panel.* TO 'pterodactyl'@'localhost';"
          sudo mysql -u root -e "FLUSH PRIVILEGES;"

      - name: Install Pterodactyl Panel
        run: |
          sudo mkdir -p /var/www/pterodactyl
          cd /var/www/pterodactyl
          
          # Download and extract release
          sudo curl -Lo panel.tar.gz https://github.com/pterodactyl/panel/releases/latest/download/panel.tar.gz
          sudo tar -xzvf panel.tar.gz
          
          sudo chown -R $USER:$USER /var/www/pterodactyl
          
          # Copy env
          cp .env.example .env
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=panel/DB_DATABASE=panel/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=pterodactyl/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=StrongPassword123!/' .env

          # Composer + Laravel setup
          composer install --no-dev --optimize-autoloader
          php artisan key:generate --force
          php artisan migrate --seed --force
          
          sudo chown -R www-data:www-data /var/www/pterodactyl

      - name: Create Admin User
        run: |
          cd /var/www/pterodactyl
          php artisan p:user:make \
            --username="${{ secrets.ADMIN_USERNAME }}" \
            --email="${{ secrets.ADMIN_EMAIL }}" \
            --name-first="${{ secrets.ADMIN_FIRST_NAME }}" \
            --name-last="${{ secrets.ADMIN_LAST_NAME }}" \
            --password="${{ secrets.ADMIN_PASSWORD }}" \
            --admin=1 \
            --no-interaction

      - name: Disable Apache
        run: |
          sudo systemctl stop apache2 || true
          sudo systemctl disable apache2 || true
          sudo systemctl mask apache2 || true

      - name: Configure Nginx for Panel
        run: |
          cat <<EOF | sudo tee /etc/nginx/sites-available/pterodactyl.conf
          server {
              listen 80;
              server_name _;
              root /var/www/pterodactyl/public;
              index index.php;
              location / {
                  try_files \$uri \$uri/ /index.php?\$query_string;
              }
              location ~ \.php\$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
                  include fastcgi_params;
              }
          }
          EOF
          sudo ln -sf /etc/nginx/sites-available/pterodactyl.conf /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx

      - name: Install PHP-FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y php8.2-fpm php8.2-cli php8.2-mysql php8.2-mbstring php8.2-bcmath php8.2-curl php8.2-gd php8.2-xml
          sudo systemctl enable --now php8.2-fpm

      - name: Fix Nginx sites
        run: |
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo ln -sf /etc/nginx/sites-available/pterodactyl.conf /etc/nginx/sites-enabled/pterodactyl.conf
          sudo nginx -t
          sudo systemctl reload nginx

      - name: Start Cloudflare Tunnel
        run: |
          docker run -d cloudflare/cloudflared:latest tunnel --no-autoupdate run --token ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}

      - name: Sleep before backup
        run: sleep 20900 # 11h 15m

      - name: Create Backup
        run: |
          BACKUP_FILE="pterodactyl-backup-$(date +%Y%m%d-%H%M).tar.gz"
          sudo tar -czf $BACKUP_FILE \
            /var/www/pterodactyl \
            /etc/pterodactyl \
            /etc/nginx \
            /var/lib/mysql \
            /var/lib/redis \
            /var/lib/tailscale
          echo "Backup created: $BACKUP_FILE"
          echo "BACKUP_FILE=$BACKUP_FILE" >> $GITHUB_ENV

      - name: Upload Backup to transfer.sh
        run: |
          UPLOAD_URL=$(curl --upload-file $BACKUP_FILE https://transfer.sh/$BACKUP_FILE)
          echo "✅ Backup uploaded: $UPLOAD_URL"
          echo "BACKUP_URL=$UPLOAD_URL" >> $GITHUB_ENV
      - name: Upload Backup to transfer.sh
        run: |
          BACKUP_FILE="pterodactyl-backup-$(date +%Y%m%d-%H%M).tar.gz"
          sudo tar -czf $BACKUP_FILE \
            /var/www/pterodactyl \
            /etc/pterodactyl \
            /etc/nginx \
            /var/lib/mysql \
            /var/lib/redis \
            /var/lib/tailscale
          UPLOAD_URL=$(curl --upload-file $BACKUP_FILE https://transfer.sh/$BACKUP_FILE)
          echo "✅ Backup uploaded: $UPLOAD_URL"
          echo $UPLOAD_URL > latest-backup-url.txt
          echo "BACKUP_URL=$UPLOAD_URL" >> $GITHUB_ENV

      - name: Save latest backup URL to repo
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add latest-backup-url.txt
          git commit -m "Update latest backup URL $(date)"
          git push
